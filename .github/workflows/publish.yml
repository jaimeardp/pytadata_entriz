# .github/workflows/publish.yml
name: Build & Publish

on:
  push:
    branches: [ release/**, hotfix/** ]   # → Test PyPI
  tags:
    - "v*.*.*"                            # → Production PyPI

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write     # for Trusted Publishing (PyPI)
      contents: write     # to attach wheel to GitHub Release (optional)

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - uses: abatilo/actions-poetry@v3
        with:
          poetry-version: "1.8.2"
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            **/.venv
          key: poetry-${{ runner.os }}-build-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-${{ runner.os }}-build-

      - name: Install runtime deps only
        run: poetry install --no-interaction --no-root --only main

      - name: Build wheel + sdist
        run: poetry build -v

      # ---------- Test PyPI ----------
      - name: Publish to Test PyPI
        if: startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/hotfix/')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      # ---------- Production PyPI (OIDC Trusted Publisher) ----------
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true   # idempotent re-runs
          verbose: true

      # ---------- Attach dist/* to GitHub Release (optional) ----------
      - name: Upload wheel/sdist to GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
